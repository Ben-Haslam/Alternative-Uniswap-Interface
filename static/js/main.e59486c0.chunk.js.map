{"version":3,"sources":["ethereum.js","Swap.js","Liquidity.js","NavBar/MenuItems.js","assets/img/logo.svg","NavBar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["ROUTER","require","ERC20","FACTORY","PAIR","_App","a","window","ethereum","request","method","accounts","provider","ethers","providers","Web3Provider","signer","getSigner","getBalance","balance_0","balance_1","utils","formatEther","this","setState","account","balance","Router","Contract","state","Router_address","abi","Weth","Weth_address","Factory","Factory_address","address","TokenA","balanceOf","TokenA_balance_0","TokenA_balance_1","symbol","TokenA_symbol","TokenA_balance","document","getElementById","innerHTML","concat","TokenB","TokenB_balance_0","TokenB_balance_1","TokenB_symbol","TokenB_balance","undefined","getPair","_TokenA_address","_TokenB_address","pairAddress","pair","getReserves","reserves","console","log","reserves_A","reserves_B","token","Component","Swap","props","handleSubmit","event","preventDefault","target","name","getTokenAData","getTokenBData","getSwap","SwapTokenforToken","amountIn","amount_out","SwapTokenforEth","getSwapE","SwapEthforToken","handleInputChange","Token","value","amountInE","amount_outE","loadBlockchainData","Token1","Token2","_amountIn","_amount_out","parseEther","toString","amountOut","approve","tokens","time","Math","floor","Date","now","deadline","BigNumber","from","swapExactTokensForTokens","swapExactTokensForETH","amount_in","getAmountsOut","amount_out0","amount_out1","amount_out2","amount_out_A","K","Token_Address","swapExactETHForTokens","className","class","onSubmit","type","placeholder","onChange","id","Liquidity","addLiquidity","amountInA","amountInB","amountInETH","amountAMin","amountBMin","amountETHMin","estimateGas","transfer","MenuItems","title","url","cName","NavBar","clicked","src","logo","map","item","index","to","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2ZAEMA,EAASC,EAAQ,IACjBC,EAAQD,EAAQ,IAChBE,EAAUF,EAAQ,IAClBG,EAAOH,EAAQ,IA+HNI,EA7Hf,+MACE,0CAAAC,EAAA,sEACyBC,OAAOC,SAASC,QAAQ,CAC7CC,OAAQ,wBAFZ,cACQC,EADR,OAIQC,EAAW,IAAIC,IAAOC,UAAUC,aAAaR,OAAOC,UACpDQ,EAASJ,EAASK,YAL1B,SAMwBL,EAASM,WAAWP,EAAS,IANrD,OAMMQ,EANN,OAOMC,EAAYP,IAAOQ,MAAMC,YAAYH,GAEzCI,KAAKC,SAAS,CAAEC,QAASd,EAAS,KAClCY,KAAKC,SAAS,CAAEZ,SAAUA,IAC1BW,KAAKC,SAAS,CAAER,OAAQA,IACxBO,KAAKC,SAAS,CAAEE,QAASN,IAEnBO,EAAS,IAAIC,IACjBL,KAAKM,MAAMC,eACX9B,EAAO+B,IACPR,KAAKM,MAAMb,QAGPgB,EAAO,IAAIJ,IACfL,KAAKM,MAAMI,aACX/B,EAAM6B,IACNR,KAAKM,MAAMb,QAGPkB,EAAU,IAAIN,IAClBL,KAAKM,MAAMM,gBACXhC,EAAQ4B,IACRR,KAAKM,MAAMjB,UAGbW,KAAKC,SAAS,CAAEG,OAAQA,IACxBJ,KAAKC,SAAS,CAAEQ,KAAMA,IACtBT,KAAKC,SAAS,CAAEU,QAASA,IAlC3B,iDADF,wHAsCE,WAAoBE,GAApB,qBAAA9B,EAAA,sEAEU+B,EAAS,IAAIT,IAASQ,EAASlC,EAAM6B,IAAKR,KAAKM,MAAMb,QAF/D,SAImCqB,EAAOC,UAAUf,KAAKM,MAAMJ,SAJ/D,cAIUc,EAJV,OAKUC,EAAmB3B,IAAOQ,MAAMC,YAAYiB,GALtD,SAMgCF,EAAOI,SANvC,OAMUC,EANV,OAQInB,KAAKC,SAAS,CAAEmB,eAAgBH,IAChCjB,KAAKC,SAAS,CAAEa,OAAQA,IACxBO,SAASC,eAAe,kBAAkBC,UACxCJ,EAAcK,OAAO,cAX3B,kDAaIH,SAASC,eAAe,kBAAkBC,UACxC,4CAdN,0DAtCF,yHAwDE,WAAoBV,GAApB,qBAAA9B,EAAA,sEAEU0C,EAAS,IAAIpB,IAASQ,EAASlC,EAAM6B,IAAKR,KAAKM,MAAMb,QAF/D,SAImCgC,EAAOV,UAAUf,KAAKM,MAAMJ,SAJ/D,cAIUwB,EAJV,OAKUC,EAAmBrC,IAAOQ,MAAMC,YAAY2B,GALtD,SAMgCD,EAAOP,SANvC,OAMUU,EANV,OAQI5B,KAAKC,SAAS,CAAE4B,eAAgBF,IAChC3B,KAAKC,SAAS,CAAEwB,OAAQA,IACxBJ,SAASC,eAAe,kBAAkBC,UACxCK,EAAcJ,OAAO,cAX3B,kDAaIH,SAASC,eAAe,kBAAkBC,UACxC,4CAdN,0DAxDF,mHA0EE,kCAAAxC,EAAA,8DAC4B+C,IAAtB9B,KAAKM,MAAMQ,aAA8CgB,IAAtB9B,KAAKM,MAAMmB,OADpD,wBAEUd,EAAUX,KAAKM,MAAMK,QAF/B,SAG8BA,EAAQoB,QAChC/B,KAAKM,MAAM0B,gBACXhC,KAAKM,MAAM2B,iBALjB,cAGUC,EAHV,OAQUC,EAAO,IAAI9B,IAAS6B,EAAarD,EAAK2B,IAAKR,KAAKM,MAAMb,QARhE,SAS2B0C,EAAKC,cAThC,OASUC,EATV,OAWIC,QAAQC,IACN,uBACAjD,IAAOQ,MAAMC,YAAYsC,EAAS,KAEpCC,QAAQC,IACN,uBACAjD,IAAOQ,MAAMC,YAAYsC,EAAS,KAGpCrC,KAAKC,SAAS,CAAEuC,WAAYlD,IAAOQ,MAAMC,YAAYsC,EAAS,MAC9DrC,KAAKC,SAAS,CAAEwC,WAAYnD,IAAOQ,MAAMC,YAAYsC,EAAS,MArBlE,iDA1EF,qHAmGE,WAAiBK,GAAjB,qBAAA3D,EAAA,8DAC4B+C,IAAtB9B,KAAKM,MAAMQ,aAA8CgB,IAAtB9B,KAAKM,MAAMmB,OADpD,wBAEUd,EAAUX,KAAKM,MAAMK,QAF/B,SAG8BA,EAAQoB,QAChC/B,KAAKM,MAAM0B,gBACXhC,KAAKM,MAAM2B,iBALjB,cAGUC,EAHV,OAQUC,EAAO,IAAI9B,IAAS6B,EAAarD,EAAK2B,IAAKR,KAAKM,MAAMb,QARhE,SAS2B0C,EAAKC,cAThC,OASUC,EATV,OAWIC,QAAQC,IACN,uBACAjD,IAAOQ,MAAMC,YAAYsC,EAAS,KAEpCC,QAAQC,IACN,uBACAjD,IAAOQ,MAAMC,YAAYsC,EAAS,KAGpCrC,KAAKC,SAAS,CAAEuC,WAAYlD,IAAOQ,MAAMC,YAAYsC,EAAS,MAC9DrC,KAAKC,SAAS,CAAEwC,WAAYnD,IAAOQ,MAAMC,YAAYsC,EAAS,MArBlE,iDAnGF,4DAA0BM,a,eCqUXC,E,kDAtUb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA0IRC,aAAe,SAACC,GACdA,EAAMC,iBACoB,YAAtBD,EAAME,OAAOC,OACf,EAAKC,cAAc,EAAK7C,MAAM0B,iBAC9B,EAAKD,WAEmB,YAAtBgB,EAAME,OAAOC,OACf,EAAKE,cAAc,EAAK9C,MAAM2B,iBAC9B,EAAKF,WAEmB,eAAtBgB,EAAME,OAAOC,MACf,EAAKG,QACH,EAAK/C,MAAM0B,gBACX,EAAK1B,MAAM2B,gBACX,EAAK3B,MAAMI,cAGW,WAAtBqC,EAAME,OAAOC,OACfZ,QAAQC,IAAI,WACZ,EAAKe,kBACH,EAAKhD,MAAMQ,OACX,EAAKR,MAAMmB,OACX,EAAKnB,MAAMiD,SACX,EAAKjD,MAAMkD,WAAW,KAGA,WAAtBT,EAAME,OAAOC,OACfZ,QAAQC,IAAI,WACZ,EAAKkB,mBAEmB,gBAAtBV,EAAME,OAAOC,OACf,EAAKQ,WACLpB,QAAQC,IAAI,eAEY,WAAtBQ,EAAME,OAAOC,OACfZ,QAAQC,IAAI,WACZ,EAAKoB,gBAAgB,EAAG,EAAKrD,MAAM0B,kBAEX,WAAtBe,EAAME,OAAOC,OACfZ,QAAQC,IAAI,WACZ,EAAKoB,gBAAgB,EAAG,EAAKrD,MAAM0B,kBAEX,gBAAtBe,EAAME,OAAOC,MACf,EAAKnB,WAtLU,EA0LnB6B,kBAAoB,SAACb,GACnBA,EAAMC,iBACN,EAAK/C,SAAL,aACE4D,MAAOd,EAAME,OAAOC,MACnBH,EAAME,OAAOC,KAAOH,EAAME,OAAOa,SA5LpC,EAAKxD,MAAQ,CACXJ,QAAS,GACTb,cAAUyC,EACVrC,YAAQqC,EACR3B,aAAS2B,EACTE,qBAAiBF,EACjBG,qBAAiBH,EACjBhB,YAAQgB,EACRL,YAAQK,EACRV,oBAAgBU,EAChBD,oBAAgBC,EAChB+B,MAAO,GAEPtD,eAAgB,6CAChBH,YAAQ0B,EACRlB,gBAAiB,6CACjBD,aAASmB,EACTU,WAAY,EACZC,WAAY,EAEZ/B,aAAc,6CACdD,UAAMqB,EACNyB,SAAU,EACVC,WAAY,MAAC1B,OAAWA,OAAWA,GACnCiC,UAAW,EACXC,YAAa,MAAClC,OAAWA,OAAWA,IA3BrB,E,sDA+BnB,WACE9B,KAAKiE,uB,sEAGP,WAAwBC,EAAQC,EAAQC,EAAWC,GAAnD,uBAAAtF,EAAA,6DACQwE,EAAWjE,IAAOQ,MAAMwE,WAAWF,EAAUG,YAC7CC,EAAYlF,IAAOQ,MAAMwE,WAAWD,EAAYE,YAFxD,SAGQL,EAAOO,QAAQzE,KAAKM,MAAMC,eAAgBgD,GAHlD,cAKQmB,EAAS,CAACR,EAAOrD,QAASsD,EAAOtD,SACjC8D,EAAOC,KAAKC,MAAMC,KAAKC,MAAQ,KAAQ,IACvCC,EAAW1F,IAAO2F,UAAUC,KAAKP,GAPzC,SASQ3E,KAAKM,MAAMF,OAAO+E,yBACtB5B,EACAiB,EACAE,EACA1E,KAAKM,MAAMJ,QACX8E,GAdJ,gD,iIAkBA,oCAAAjG,EAAA,6DACQwE,EAAWjE,IAAOQ,MAAMwE,WAAWtE,KAAKM,MAAMiD,SAASgB,YACvDC,EAAYlF,IAAOQ,MAAMwE,WAC7BtE,KAAKM,MAAMkD,WAAW,GAAGe,YAH7B,SAKQvE,KAAKM,MAAMQ,OAAO2D,QAAQzE,KAAKM,MAAMC,eAAgBgD,GAL7D,cAOQmB,EAAS,CAAC1E,KAAKM,MAAM0B,gBAAiBhC,KAAKM,MAAMI,cACjDiE,EAAOC,KAAKC,MAAMC,KAAKC,MAAQ,KAAQ,IACvCC,EAAW1F,IAAO2F,UAAUC,KAAKP,GATzC,SAWQ3E,KAAKM,MAAMF,OAAOgF,sBACtB7B,EACAiB,EACAE,EACA1E,KAAKM,MAAMJ,QACX8E,GAhBJ,gD,kHAoBA,WAActC,GAAd,2BAAA3D,EAAA,8DAC4B+C,IAAtB9B,KAAKM,MAAMQ,aAA8CgB,IAAtB9B,KAAKM,MAAMmB,OADpD,wBAEQiD,EAAS,CACX1E,KAAKM,MAAM0B,gBACXhC,KAAKM,MAAM2B,gBACXjC,KAAKM,MAAMI,cAGP2E,EAAY/F,IAAOQ,MAAMwE,WAAWtE,KAAKM,MAAMiD,SAASgB,YARlE,SAS6BvE,KAAKM,MAAMF,OAAOkF,cACzCD,EACAX,GAXN,OASUlB,EATV,OAaU+B,EAAcjG,IAAOQ,MAAMC,YAAYyD,EAAW,IAClDgC,EAAclG,IAAOQ,MAAMC,YAAYyD,EAAW,IAClDiC,EAAcnG,IAAOQ,MAAMC,YAAYyD,EAAW,IAClDkC,EAAe,CAACH,EAAaC,EAAaC,GAChDnD,QAAQC,IAAImD,GACZ1F,KAAKC,SAAS,CAAEuD,WAAYkC,IAlBhC,iD,2HAsBA,WAAsBC,EAAGC,GAAzB,uBAAA7G,EAAA,6DACQwE,EAAWjE,IAAOQ,MAAMwE,WAAWtE,KAAKM,MAAMyD,UAAUQ,YACxDC,EAAYlF,IAAOQ,MAAMwE,WAC7BtE,KAAKM,MAAM0D,YAAY2B,GAAGpB,YAH9B,SAKQvE,KAAKM,MAAMG,KAAKgE,QAAQzE,KAAKM,MAAMC,eAAgBgD,GAL3D,cAOQmB,EAAS,CAAC1E,KAAKM,MAAMI,aAAckF,GACnCjB,EAAOC,KAAKC,MAAMC,KAAKC,MAAQ,KAAQ,IACvCC,EAAW1F,IAAO2F,UAAUC,KAAKP,GATzC,SAWQ3E,KAAKM,MAAMF,OAAOyF,sBACtBrB,EACAE,EACA1E,KAAKM,MAAMJ,QACX8E,EACA,CAAElB,MAAOP,IAhBb,gD,sHAoBA,wCAAAxE,EAAA,8DAC4B+C,IAAtB9B,KAAKM,MAAMQ,aAA8CgB,IAAtB9B,KAAKM,MAAMmB,OADpD,wBAEUiD,EAAS,CACb1E,KAAKM,MAAMI,aACXV,KAAKM,MAAM0B,gBACXhC,KAAKM,MAAM2B,iBAGPoD,EAAY/F,IAAOQ,MAAMwE,WAC7BtE,KAAKM,MAAMyD,UAAUQ,YAT3B,SAW6BvE,KAAKM,MAAMF,OAAOkF,cACzCD,EACAX,GAbN,OAWUlB,EAXV,OAeU+B,EAAcjG,IAAOQ,MAAMC,YAAYyD,EAAW,IAClDgC,EAAclG,IAAOQ,MAAMC,YAAYyD,EAAW,IAClDiC,EAAcnG,IAAOQ,MAAMC,YAAYyD,EAAW,IAClDkC,EAAe,CAACH,EAAaC,EAAaC,GAChDnD,QAAQC,IAAImD,GACZ1F,KAAKC,SAAS,CAAE+D,YAAa0B,IApBjC,iD,0EA+EA,WACE,OACE,gCACE,qBAAKI,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oDACA,gDAAmB9F,KAAKM,MAAMJ,QAA9B,OACA,gDAAmBF,KAAKM,MAAMH,gBAIlC,qBAAK2F,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACE,0CAEA,uBAAMC,MAAM,SAAS7C,KAAK,UAAU8C,SAAUhG,KAAK8C,aAAnD,UACE,uBACEmD,KAAK,OACL/C,KAAK,kBACLgD,YAAY,sBACZC,SAAUnG,KAAK4D,oBAEjB,uBAAOqC,KAAK,SAASnC,MAAM,cAG7B,mBAAGiC,MAAM,gBAAgBK,GAAG,mBAC5B,oBAAGL,MAAM,gBAAT,cAA2B/F,KAAKM,MAAMc,uBAI1C,qBAAK0E,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACE,0CAEA,uBACEA,UAAU,SACV5C,KAAK,UACL8C,SAAUhG,KAAK8C,aAHjB,UAKE,uBACEmD,KAAK,OACL/C,KAAK,kBACLgD,YAAY,sBACZC,SAAUnG,KAAK4D,oBAEjB,uBAAOqC,KAAK,SAASnC,MAAM,cAG7B,mBAAGgC,UAAU,gBAAgBM,GAAG,mBAChC,oBAAGN,UAAU,gBAAb,cAA+B9F,KAAKM,MAAMuB,uBAK9C,qBAAKiE,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACE,+CAEA,uBACEA,UAAU,SACV5C,KAAK,cACL8C,SAAUhG,KAAK8C,aAHjB,UAKE,oDAAuB9C,KAAKM,MAAMkC,cAClC,oDAAuBxC,KAAKM,MAAMmC,cAClC,uBAAOwD,KAAK,SAASnC,MAAM,oBAG7B,uBACEgC,UAAU,SACV5C,KAAK,aACL8C,SAAUhG,KAAK8C,aAHjB,UAKE,uBACEmD,KAAK,OACL/C,KAAK,WACLgD,YAAY,qBACZC,SAAUnG,KAAK4D,oBAEjB,uBAAOqC,KAAK,SAASnC,MAAM,cAI7B,uBAAMgC,UAAU,OAAO5C,KAAK,SAAS8C,SAAUhG,KAAK8C,aAApD,UACE,kDAAqB9C,KAAKM,MAAMkD,WAAW,MAC3C,uBAAOsC,UAAU,cAAcG,KAAK,SAASnC,MAAM,YAIrD,uBAAMgC,UAAU,OAAO5C,KAAK,SAAS8C,SAAUhG,KAAK8C,aAApD,UACE,8CAAiB9C,KAAKM,MAAMkD,WAAW,MACvC,uBAAOsC,UAAU,cAAcG,KAAK,SAASnC,MAAM,iBAMzD,qBAAKgC,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACE,2CACA,uBACEA,UAAU,SACV5C,KAAK,cACL8C,SAAUhG,KAAK8C,aAHjB,UAKE,uBACEmD,KAAK,OACL/C,KAAK,YACLgD,YAAY,qBACZC,SAAUnG,KAAK4D,oBAEjB,uBAAOqC,KAAK,SAASnC,MAAM,cAI7B,uBAAMgC,UAAU,OAAO5C,KAAK,SAAS8C,SAAUhG,KAAK8C,aAApD,UACE,kDAAqB9C,KAAKM,MAAM0D,YAAY,MAC5C,uBAAO8B,UAAU,cAAcG,KAAK,SAASnC,MAAM,YAIrD,uBAAMgC,UAAU,OAAO5C,KAAK,SAAS8C,SAAUhG,KAAK8C,aAApD,UACE,kDAAqB9C,KAAKM,MAAM0D,YAAY,MAC5C,uBAAO8B,UAAU,cAAcG,KAAK,SAASnC,MAAM,wB,GA9T9ChF,GC8NJuH,E,kDA7Nb,WAAYxD,GAAQ,IAAD,8BACjB,cAAMA,IAmGRC,aAAe,SAACC,GACdA,EAAMC,iBACoB,YAAtBD,EAAME,OAAOC,MACf,EAAKC,cAAc,EAAK7C,MAAM0B,iBAEN,YAAtBe,EAAME,OAAOC,MACf,EAAKE,cAAc,EAAK9C,MAAM2B,iBAEN,qBAAtBc,EAAME,OAAOC,MACf,EAAKoD,eAEmB,gBAAtBvD,EAAME,OAAOC,MACf,EAAKnB,WAhHU,EAoHnB6B,kBAAoB,SAACb,GACnBA,EAAMC,iBACN,EAAK/C,SAAL,aACE4D,MAAOd,EAAME,OAAOC,MACnBH,EAAME,OAAOC,KAAOH,EAAME,OAAOa,SAtHpC,EAAKxD,MAAQ,CACXJ,QAAS,GACTb,cAAUyC,EACVrC,YAAQqC,EACR3B,aAAS2B,EACTE,qBAAiBF,EACjBG,qBAAiBH,EACjBhB,YAAQgB,EACRL,YAAQK,EACRV,oBAAgBU,EAChBD,oBAAgBC,EAChByE,UAAW,EACXC,UAAW,EACXC,YAAa,EACbC,WAAY,EACZC,WAAY,EACZC,aAAc,EACd/C,MAAO,GAEPtD,eAAgB,6CAChBH,YAAQ0B,EACRlB,gBAAiB,6CACjBD,aAASmB,EACTU,WAAY,EACZC,WAAY,EACZ/B,aAAc,6CACdD,UAAMqB,GA5BS,E,sDAgCnB,WACE9B,KAAKiE,uB,iEAGP,sCAAAlF,EAAA,6DACQwH,EAAYjH,IAAOQ,MAAMwE,WAAWtE,KAAKM,MAAMiG,UAAUhC,YACzDiC,EAAYlH,IAAOQ,MAAMwE,WAAWtE,KAAKM,MAAMkG,UAAUjC,YAEzDmC,EAAapH,IAAOQ,MAAMwE,WAC9BtE,KAAKM,MAAMoG,WAAWnC,YAElBoC,EAAarH,IAAOQ,MAAMwE,WAC9BtE,KAAKM,MAAMqG,WAAWpC,YAGlBI,EAAOC,KAAKC,MAAMC,KAAKC,MAAQ,KAAQ,IACvCC,EAAW1F,IAAO2F,UAAUC,KAAKP,GAZzC,SAcQ3E,KAAKM,MAAMQ,OAAO2D,QAAQzE,KAAKM,MAAMC,eAAgBgG,GAd7D,wBAeQvG,KAAKM,MAAMmB,OAAOgD,QAAQzE,KAAKM,MAAMC,eAAgBiG,GAf7D,yBAiBQxG,KAAKM,MAAMF,OAAOkG,aACtBtG,KAAKM,MAAM0B,gBACXhC,KAAKM,MAAM2B,gBACXsE,EACAC,EACAE,EACAC,EACA3G,KAAKM,MAAMJ,QACX8E,GAzBJ,iD,2HA6BA,wCAAAjG,EAAA,6DACQwH,EAAYjH,IAAOQ,MAAMwE,WAAWtE,KAAKM,MAAMiG,UAAUhC,YACzDiC,EAAYlH,IAAOQ,MAAMwE,WAAWtE,KAAKM,MAAMkG,UAAUjC,YAEzDmC,EAAapH,IAAOQ,MAAMwE,WAC9BtE,KAAKM,MAAMoG,WAAWnC,YAElBoC,EAAarH,IAAOQ,MAAMwE,WAC9BtE,KAAKM,MAAMqG,WAAWpC,YAGlBI,EAAOC,KAAKC,MAAMC,KAAKC,MAAQ,KAAQ,IACvCC,EAAW1F,IAAO2F,UAAUC,KAAKP,GAZzC,SAcyB3E,KAAKM,MAAMF,OAAOyG,YAAYP,aACnDtG,KAAKM,MAAM0B,gBACXhC,KAAKM,MAAM2B,gBACXsE,EACAC,EACAE,EACAC,EACA3G,KAAKM,MAAMJ,QACX8E,GAtBJ,OAcQ8B,EAdR,OAyBExE,QAAQC,IAAIuE,GAEZxE,QAAQC,IAAI,cAAejD,IAAOQ,MAAMC,YAAY+G,EAAS,KAC7DxE,QAAQC,IAAI,cAAejD,IAAOQ,MAAMC,YAAY+G,EAAS,KAC7DxE,QAAQC,IACN,yBACAjD,IAAOQ,MAAMC,YAAY+G,EAAS,KA/BtC,iD,0EA2DA,WACE,OACE,gCACE,qBAAKhB,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mDACA,gDAAmB9F,KAAKM,MAAMJ,QAA9B,OACA,gDAAmBF,KAAKM,MAAMH,gBAKlC,qBAAK2F,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACE,0CAEA,uBAAMC,MAAM,SAAS7C,KAAK,UAAU8C,SAAUhG,KAAK8C,aAAnD,UACE,uBACEmD,KAAK,OACL/C,KAAK,kBACLgD,YAAY,sBACZC,SAAUnG,KAAK4D,oBAEjB,uBAAOqC,KAAK,SAASnC,MAAM,cAG7B,mBAAGiC,MAAM,gBAAgBK,GAAG,mBAC5B,oBAAGL,MAAM,gBAAT,cAA2B/F,KAAKM,MAAMc,uBAK1C,qBAAK0E,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACE,0CAEA,uBACEA,UAAU,SACV5C,KAAK,UACL8C,SAAUhG,KAAK8C,aAHjB,UAKE,uBACEmD,KAAK,OACL/C,KAAK,kBACLgD,YAAY,sBACZC,SAAUnG,KAAK4D,oBAEjB,uBAAOqC,KAAK,SAASnC,MAAM,cAG7B,mBAAGgC,UAAU,gBAAgBM,GAAG,mBAChC,oBAAGN,UAAU,gBAAb,cAA+B9F,KAAKM,MAAMuB,uBAK9C,qBAAKiE,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACE,wDAEA,uBACEA,UAAU,SACV5C,KAAK,cACL8C,SAAUhG,KAAK8C,aAHjB,UAKE,oDAAuB9C,KAAKM,MAAMkC,cAClC,oDAAuBxC,KAAKM,MAAMmC,cAClC,uBAAOwD,KAAK,SAASnC,MAAM,oBAG7B,uBACEgC,UAAU,SACV5C,KAAK,mBACL8C,SAAUhG,KAAK8C,aAHjB,UAKE,uBACEmD,KAAK,OACL/C,KAAK,YACLgD,YAAY,oBACZC,SAAUnG,KAAK4D,oBAGjB,uBACEqC,KAAK,OACL/C,KAAK,YACLgD,YAAY,oBACZC,SAAUnG,KAAK4D,oBAEjB,uBAAOqC,KAAK,SAASnC,MAAM,iC,GArNjBhF,G,QCLXiI,EAAY,CACvB,CACEC,MAAO,OACPC,IAAK,IACLC,MAAO,aAET,CACEF,MAAO,mBACPC,IAAK,aACLC,MAAO,cCTI,MAA0B,iCCoC1BC,G,mNA7Bb7G,MAAQ,CAAE8G,SAAS,G,4CAEnB,WACE,OACE,gCACE,qBAAKtB,UAAU,QAAf,SACE,qBAAIA,UAAU,cAAd,UACE,qBAAKuB,IAAKC,EAAMxB,UAAU,SAD5B,yBAKF,qBAAKA,UAAU,cAAf,SACE,oBAAIA,UAAS,WAAb,SACGiB,EAAUQ,KAAI,SAACC,EAAMC,GACpB,OACE,6BACE,cAAC,IAAD,CAAM3B,UAAW,YAAa4B,GAAIF,EAAKP,IAAvC,SACGO,EAAKR,SAFDS,iB,GAhBJ9E,c,QCaNgF,MAVf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,IAAIC,UAAWlF,IACjC,cAAC,IAAD,CAAOgF,OAAK,EAACC,KAAK,aAAaC,UAAWzB,QCFjC0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAIJrH,SAASC,eAAe,SAM1ByG,K","file":"static/js/main.e59486c0.chunk.js","sourcesContent":["import { ethers, Contract } from \"ethers\";\nimport { Component } from \"react\";\nconst ROUTER = require(\"./build/UniswapV2Router02.json\");\nconst ERC20 = require(\"./build/ERC20.json\");\nconst FACTORY = require(\"./build/IUniswapV2Factory.json\");\nconst PAIR = require(\"./build/IUniswapV2Pair.json\");\n\nexport class _App extends Component {\n  async loadBlockchainData() {\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    let balance_0 = await provider.getBalance(accounts[0]);\n    let balance_1 = ethers.utils.formatEther(balance_0);\n\n    this.setState({ account: accounts[0] });\n    this.setState({ provider: provider });\n    this.setState({ signer: signer });\n    this.setState({ balance: balance_1 });\n\n    const Router = new Contract(\n      this.state.Router_address,\n      ROUTER.abi,\n      this.state.signer\n    );\n\n    const Weth = new Contract(\n      this.state.Weth_address,\n      ERC20.abi,\n      this.state.signer\n    );\n\n    const Factory = new Contract(\n      this.state.Factory_address,\n      FACTORY.abi,\n      this.state.provider\n    );\n\n    this.setState({ Router: Router });\n    this.setState({ Weth: Weth });\n    this.setState({ Factory: Factory });\n  }\n\n  async getTokenAData(address) {\n    try {\n      const TokenA = new Contract(address, ERC20.abi, this.state.signer);\n\n      const TokenA_balance_0 = await TokenA.balanceOf(this.state.account);\n      const TokenA_balance_1 = ethers.utils.formatEther(TokenA_balance_0);\n      const TokenA_symbol = await TokenA.symbol();\n\n      this.setState({ TokenA_balance: TokenA_balance_1 });\n      this.setState({ TokenA: TokenA });\n      document.getElementById(\"TokenA_message\").innerHTML =\n        TokenA_symbol.concat(\" balance: \");\n    } catch (err) {\n      document.getElementById(\"TokenA_message\").innerHTML =\n        \"Error: Please enter a valid token address\";\n    }\n  }\n\n  async getTokenBData(address) {\n    try {\n      const TokenB = new Contract(address, ERC20.abi, this.state.signer);\n\n      const TokenB_balance_0 = await TokenB.balanceOf(this.state.account);\n      const TokenB_balance_1 = ethers.utils.formatEther(TokenB_balance_0);\n      const TokenB_symbol = await TokenB.symbol();\n\n      this.setState({ TokenB_balance: TokenB_balance_1 });\n      this.setState({ TokenB: TokenB });\n      document.getElementById(\"TokenB_message\").innerHTML =\n        TokenB_symbol.concat(\" balance: \");\n    } catch (err) {\n      document.getElementById(\"TokenB_message\").innerHTML =\n        \"Error: Please enter a valid token address\";\n    }\n  }\n\n  async getPair() {\n    if (this.state.TokenA !== undefined && this.state.TokenB !== undefined) {\n      const Factory = this.state.Factory;\n      const pairAddress = await Factory.getPair(\n        this.state._TokenA_address,\n        this.state._TokenB_address\n      );\n\n      const pair = new Contract(pairAddress, PAIR.abi, this.state.signer);\n      const reserves = await pair.getReserves();\n\n      console.log(\n        \"reserves for token A\",\n        ethers.utils.formatEther(reserves[0])\n      );\n      console.log(\n        \"reserves for token B\",\n        ethers.utils.formatEther(reserves[1])\n      );\n\n      this.setState({ reserves_A: ethers.utils.formatEther(reserves[0]) });\n      this.setState({ reserves_B: ethers.utils.formatEther(reserves[1]) });\n    }\n  }\n\n  async getPairETH(token) {\n    if (this.state.TokenA !== undefined && this.state.TokenB !== undefined) {\n      const Factory = this.state.Factory;\n      const pairAddress = await Factory.getPair(\n        this.state._TokenA_address,\n        this.state._TokenB_address\n      );\n\n      const pair = new Contract(pairAddress, PAIR.abi, this.state.signer);\n      const reserves = await pair.getReserves();\n\n      console.log(\n        \"reserves for token A\",\n        ethers.utils.formatEther(reserves[0])\n      );\n      console.log(\n        \"reserves for token B\",\n        ethers.utils.formatEther(reserves[1])\n      );\n\n      this.setState({ reserves_A: ethers.utils.formatEther(reserves[0]) });\n      this.setState({ reserves_B: ethers.utils.formatEther(reserves[1]) });\n    }\n  }\n}\n\nexport default _App;\n","import React from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport _App from \"./ethereum\";\n\nclass Swap extends _App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      provider: undefined,\n      signer: undefined,\n      balance: undefined,\n      _TokenA_address: undefined,\n      _TokenB_address: undefined,\n      TokenA: undefined,\n      TokenB: undefined,\n      TokenA_balance: undefined,\n      TokenB_balance: undefined,\n      Token: \"\",\n\n      Router_address: \"0x4489D87C8440B19f11d63FA2246f943F492F3F5F\",\n      Router: undefined,\n      Factory_address: \"0x4EDFE8706Cefab9DCd52630adFFd00E9b93FF116\",\n      Factory: undefined,\n      reserves_A: 0,\n      reserves_B: 0,\n\n      Weth_address: \"0x3f0D1FAA13cbE43D662a37690f0e8027f9D89eBF\",\n      Weth: undefined,\n      amountIn: 0,\n      amount_out: [undefined, undefined, undefined],\n      amountInE: 0,\n      amount_outE: [undefined, undefined, undefined],\n    };\n  }\n\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async SwapTokenforToken(Token1, Token2, _amountIn, _amount_out) {\n    const amountIn = ethers.utils.parseEther(_amountIn.toString());\n    const amountOut = ethers.utils.parseEther(_amount_out.toString());\n    await Token1.approve(this.state.Router_address, amountIn);\n\n    const tokens = [Token1.address, Token2.address];\n    const time = Math.floor(Date.now() / 1000) + 200000;\n    const deadline = ethers.BigNumber.from(time);\n\n    await this.state.Router.swapExactTokensForTokens(\n      amountIn,\n      amountOut,\n      tokens,\n      this.state.account,\n      deadline\n    );\n  }\n\n  async SwapTokenforEth() {\n    const amountIn = ethers.utils.parseEther(this.state.amountIn.toString());\n    const amountOut = ethers.utils.parseEther(\n      this.state.amount_out[2].toString()\n    );\n    await this.state.TokenA.approve(this.state.Router_address, amountIn);\n\n    const tokens = [this.state._TokenA_address, this.state.Weth_address];\n    const time = Math.floor(Date.now() / 1000) + 200000;\n    const deadline = ethers.BigNumber.from(time);\n\n    await this.state.Router.swapExactTokensForETH(\n      amountIn,\n      amountOut,\n      tokens,\n      this.state.account,\n      deadline\n    );\n  }\n\n  async getSwap(token) {\n    if (this.state.TokenA !== undefined && this.state.TokenB !== undefined) {\n      let tokens = [\n        this.state._TokenA_address,\n        this.state._TokenB_address,\n        this.state.Weth_address,\n      ];\n\n      const amount_in = ethers.utils.parseEther(this.state.amountIn.toString());\n      const amount_out = await this.state.Router.getAmountsOut(\n        amount_in,\n        tokens\n      );\n      const amount_out0 = ethers.utils.formatEther(amount_out[0]);\n      const amount_out1 = ethers.utils.formatEther(amount_out[1]);\n      const amount_out2 = ethers.utils.formatEther(amount_out[2]);\n      const amount_out_A = [amount_out0, amount_out1, amount_out2];\n      console.log(amount_out_A);\n      this.setState({ amount_out: amount_out_A });\n    }\n  }\n\n  async SwapEthforToken(K, Token_Address) {\n    const amountIn = ethers.utils.parseEther(this.state.amountInE.toString());\n    const amountOut = ethers.utils.parseEther(\n      this.state.amount_outE[K].toString()\n    );\n    await this.state.Weth.approve(this.state.Router_address, amountIn);\n\n    const tokens = [this.state.Weth_address, Token_Address];\n    const time = Math.floor(Date.now() / 1000) + 200000;\n    const deadline = ethers.BigNumber.from(time);\n\n    await this.state.Router.swapExactETHForTokens(\n      amountOut,\n      tokens,\n      this.state.account,\n      deadline,\n      { value: amountIn }\n    );\n  }\n\n  async getSwapE() {\n    if (this.state.TokenA !== undefined && this.state.TokenB !== undefined) {\n      const tokens = [\n        this.state.Weth_address,\n        this.state._TokenA_address,\n        this.state._TokenB_address,\n      ];\n\n      const amount_in = ethers.utils.parseEther(\n        this.state.amountInE.toString()\n      );\n      const amount_out = await this.state.Router.getAmountsOut(\n        amount_in,\n        tokens\n      );\n      const amount_out0 = ethers.utils.formatEther(amount_out[0]);\n      const amount_out1 = ethers.utils.formatEther(amount_out[1]);\n      const amount_out2 = ethers.utils.formatEther(amount_out[2]);\n      const amount_out_A = [amount_out0, amount_out1, amount_out2];\n      console.log(amount_out_A);\n      this.setState({ amount_outE: amount_out_A });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (event.target.name === \"SubmitA\") {\n      this.getTokenAData(this.state._TokenA_address);\n      this.getPair();\n    }\n    if (event.target.name === \"SubmitB\") {\n      this.getTokenBData(this.state._TokenB_address);\n      this.getPair();\n    }\n    if (event.target.name === \"SubmitSwap\") {\n      this.getSwap(\n        this.state._TokenA_address,\n        this.state._TokenB_address,\n        this.state.Weth_address\n      );\n    }\n    if (event.target.name === \"swapAB\") {\n      console.log(\"Swap B!\");\n      this.SwapTokenforToken(\n        this.state.TokenA,\n        this.state.TokenB,\n        this.state.amountIn,\n        this.state.amount_out[1]\n      );\n    }\n    if (event.target.name === \"swapAE\") {\n      console.log(\"Swap E!\");\n      this.SwapTokenforEth();\n    }\n    if (event.target.name === \"SubmitSwapE\") {\n      this.getSwapE();\n      console.log(\"Get swap E\");\n    }\n    if (event.target.name === \"swapEA\") {\n      console.log(\"Swap A!\");\n      this.SwapEthforToken(1, this.state._TokenA_address);\n    }\n    if (event.target.name === \"swapEB\") {\n      console.log(\"Swap B!\");\n      this.SwapEthforToken(2, this.state._TokenA_address);\n    }\n    if (event.target.name === \"GetReserves\") {\n      this.getPair();\n    }\n  };\n\n  handleInputChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      Token: event.target.name,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Swap tokens / ETH</h4>\n            <p> Your account: {this.state.account} </p>\n            <p> Your balance: {this.state.balance}</p>\n          </div>\n        </div>\n\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Token A</h4>\n\n            <form class=\"myform\" name=\"SubmitA\" onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                name=\"_TokenA_address\"\n                placeholder=\"enter token address\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            <p class=\"Token_message\" id=\"TokenA_message\"></p>\n            <p class=\"Token_message\"> {this.state.TokenA_balance}</p>\n          </div>\n        </div>\n\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Token B</h4>\n\n            <form\n              className=\"myform\"\n              name=\"SubmitB\"\n              onSubmit={this.handleSubmit}\n            >\n              <input\n                type=\"text\"\n                name=\"_TokenB_address\"\n                placeholder=\"enter token address\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            <p className=\"Token_message\" id=\"TokenB_message\"></p>\n            <p className=\"Token_message\"> {this.state.TokenB_balance}</p>\n          </div>\n        </div>\n\n        {/* Swap Token A */}\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Swap Token A</h4>\n\n            <form\n              className=\"myform\"\n              name=\"GetReserves\"\n              onSubmit={this.handleSubmit}\n            >\n              <p> Token A reserves: {this.state.reserves_A}</p>\n              <p> Token B reserves: {this.state.reserves_B}</p>\n              <input type=\"submit\" value=\"Get Reserves\" />\n            </form>\n\n            <form\n              className=\"myform\"\n              name=\"SubmitSwap\"\n              onSubmit={this.handleSubmit}\n            >\n              <input\n                type=\"text\"\n                name=\"amountIn\"\n                placeholder=\"enter input amount\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            {/* Swap for B */}\n            <form className=\"swap\" name=\"swapAB\" onSubmit={this.handleSubmit}>\n              <label>Token B out: {this.state.amount_out[1]}</label>\n              <input className=\"swap_button\" type=\"submit\" value=\"Swap\" />\n            </form>\n\n            {/* Swap for ETH */}\n            <form className=\"swap\" name=\"swapAE\" onSubmit={this.handleSubmit}>\n              <label>ETH out: {this.state.amount_out[2]}</label>\n              <input className=\"swap_button\" type=\"submit\" value=\"Swap\" />\n            </form>\n          </div>\n        </div>\n\n        {/* Swap ETH */}\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Swap ETH</h4>\n            <form\n              className=\"myform\"\n              name=\"SubmitSwapE\"\n              onSubmit={this.handleSubmit}\n            >\n              <input\n                type=\"text\"\n                name=\"amountInE\"\n                placeholder=\"enter input amount\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            {/* Swap for A */}\n            <form className=\"swap\" name=\"swapEA\" onSubmit={this.handleSubmit}>\n              <label>Token A out: {this.state.amount_outE[1]}</label>\n              <input className=\"swap_button\" type=\"submit\" value=\"Swap\" />\n            </form>\n\n            {/* Swap for B */}\n            <form className=\"swap\" name=\"swapEB\" onSubmit={this.handleSubmit}>\n              <label>Token B out: {this.state.amount_outE[2]}</label>\n              <input className=\"swap_button\" type=\"submit\" value=\"Swap\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Swap;\n","import React from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport _App from \"./ethereum\";\n\nclass Liquidity extends _App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      provider: undefined,\n      signer: undefined,\n      balance: undefined,\n      _TokenA_address: undefined,\n      _TokenB_address: undefined,\n      TokenA: undefined,\n      TokenB: undefined,\n      TokenA_balance: undefined,\n      TokenB_balance: undefined,\n      amountInA: 0,\n      amountInB: 0,\n      amountInETH: 0,\n      amountAMin: 0,\n      amountBMin: 0,\n      amountETHMin: 0,\n      Token: \"\",\n\n      Router_address: \"0x4489D87C8440B19f11d63FA2246f943F492F3F5F\",\n      Router: undefined,\n      Factory_address: \"0x4EDFE8706Cefab9DCd52630adFFd00E9b93FF116\",\n      Factory: undefined,\n      reserves_A: 0,\n      reserves_B: 0,\n      Weth_address: \"0x3f0D1FAA13cbE43D662a37690f0e8027f9D89eBF\",\n      Weth: undefined,\n    };\n  }\n\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async addLiquidity() {\n    const amountInA = ethers.utils.parseEther(this.state.amountInA.toString());\n    const amountInB = ethers.utils.parseEther(this.state.amountInB.toString());\n\n    const amountAMin = ethers.utils.parseEther(\n      this.state.amountAMin.toString()\n    );\n    const amountBMin = ethers.utils.parseEther(\n      this.state.amountBMin.toString()\n    );\n\n    const time = Math.floor(Date.now() / 1000) + 200000;\n    const deadline = ethers.BigNumber.from(time);\n\n    await this.state.TokenA.approve(this.state.Router_address, amountInA);\n    await this.state.TokenB.approve(this.state.Router_address, amountInB);\n\n    await this.state.Router.addLiquidity(\n      this.state._TokenA_address,\n      this.state._TokenB_address,\n      amountInA,\n      amountInB,\n      amountAMin,\n      amountBMin,\n      this.state.account,\n      deadline\n    );\n  }\n\n  async addLiquidityTest() {\n    const amountInA = ethers.utils.parseEther(this.state.amountInA.toString());\n    const amountInB = ethers.utils.parseEther(this.state.amountInB.toString());\n\n    const amountAMin = ethers.utils.parseEther(\n      this.state.amountAMin.toString()\n    );\n    const amountBMin = ethers.utils.parseEther(\n      this.state.amountBMin.toString()\n    );\n\n    const time = Math.floor(Date.now() / 1000) + 200000;\n    const deadline = ethers.BigNumber.from(time);\n\n    const transfer = await this.state.Router.estimateGas.addLiquidity(\n      this.state._TokenA_address,\n      this.state._TokenB_address,\n      amountInA,\n      amountInB,\n      amountAMin,\n      amountBMin,\n      this.state.account,\n      deadline\n    );\n\n    console.log(transfer);\n\n    console.log(\"tokenA in: \", ethers.utils.formatEther(transfer[0]));\n    console.log(\"tokenB in: \", ethers.utils.formatEther(transfer[1]));\n    console.log(\n      \"liquidity tokens out: \",\n      ethers.utils.formatEther(transfer[2])\n    );\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (event.target.name === \"SubmitA\") {\n      this.getTokenAData(this.state._TokenA_address);\n    }\n    if (event.target.name === \"SubmitB\") {\n      this.getTokenBData(this.state._TokenB_address);\n    }\n    if (event.target.name === \"Deploy Liquidity\") {\n      this.addLiquidity();\n    }\n    if (event.target.name === \"GetReserves\") {\n      this.getPair();\n    }\n  };\n\n  handleInputChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      Token: event.target.name,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Deploy liquidity</h4>\n            <p> Your account: {this.state.account} </p>\n            <p> Your balance: {this.state.balance}</p>\n          </div>\n        </div>\n\n        {/* Token A */}\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Token A</h4>\n\n            <form class=\"myform\" name=\"SubmitA\" onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                name=\"_TokenA_address\"\n                placeholder=\"enter token address\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            <p class=\"Token_message\" id=\"TokenA_message\"></p>\n            <p class=\"Token_message\"> {this.state.TokenA_balance}</p>\n          </div>\n        </div>\n\n        {/* Token B */}\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Token B</h4>\n\n            <form\n              className=\"myform\"\n              name=\"SubmitB\"\n              onSubmit={this.handleSubmit}\n            >\n              <input\n                type=\"text\"\n                name=\"_TokenB_address\"\n                placeholder=\"enter token address\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            <p className=\"Token_message\" id=\"TokenB_message\"></p>\n            <p className=\"Token_message\"> {this.state.TokenB_balance}</p>\n          </div>\n        </div>\n\n        {/* Deploy liquidity */}\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Deploy A/B liquidity </h4>\n\n            <form\n              className=\"myform\"\n              name=\"GetReserves\"\n              onSubmit={this.handleSubmit}\n            >\n              <p> Token A reserves: {this.state.reserves_A}</p>\n              <p> Token B reserves: {this.state.reserves_B}</p>\n              <input type=\"submit\" value=\"Get Reserves\" />\n            </form>\n\n            <form\n              className=\"myform\"\n              name=\"Deploy Liquidity\"\n              onSubmit={this.handleSubmit}\n            >\n              <input\n                type=\"text\"\n                name=\"amountInA\"\n                placeholder=\"Amount in Token A\"\n                onChange={this.handleInputChange}\n              />\n\n              <input\n                type=\"text\"\n                name=\"amountInB\"\n                placeholder=\"Amount in Token B\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Add liquidity\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Liquidity;\n","export const MenuItems = [\n  {\n    title: \"Swap\",\n    url: \"/\",\n    cName: \"nav-links\",\n  },\n  {\n    title: \"Deploy Liquidity\",\n    url: \"/liquidity\",\n    cName: \"nav-links\",\n  },\n];\n","export default __webpack_public_path__ + \"static/media/logo.28418735.svg\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MenuItems } from \"./MenuItems\";\nimport logo from \"../assets/img/logo.svg\";\nimport \"./NavBar.css\";\n\nclass NavBar extends Component {\n  state = { clicked: false };\n\n  render() {\n    return (\n      <nav>\n        <div className=\"Title\">\n          <h1 className=\"navbar-logo\">\n            <img src={logo} className=\"logo\"></img> Autonity Uniswap\n          </h1>\n        </div>\n\n        <div className=\"NavbarItems\">\n          <ul className={`nav-menu`}>\n            {MenuItems.map((item, index) => {\n              return (\n                <li key={index}>\n                  <Link className={\"nav-links\"} to={item.url}>\n                    {item.title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport _App from \"./ethereum\";\nimport Swap from \"./Swap\";\nimport Liquidity from \"./Liquidity\";\nimport NarBar from \"./NavBar/NavBar\";\nimport { Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NarBar />\n      <Route exact path=\"/\" component={Swap} />\n      <Route exact path=\"/liquidity\" component={Liquidity} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}