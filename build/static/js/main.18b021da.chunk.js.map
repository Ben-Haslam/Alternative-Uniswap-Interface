{"version":3,"sources":["ethereum.js","Swap.js","Liquidity.js","NavBar/MenuItems.js","assets/img/logo.svg","NavBar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["ROUTER","require","ERC20","FACTORY","PAIR","_App","a","window","ethereum","request","method","accounts","provider","ethers","providers","Web3Provider","signer","getSigner","getBalance","balance_0","balance_1","utils","formatEther","this","setState","account","balance","Router","Contract","state","Router_address","abi","Weth","Weth_address","Factory","Factory_address","address","TokenA","balanceOf","TokenA_balance_0","TokenA_balance_1","symbol","TokenA_symbol","TokenA_balance","document","getElementById","innerHTML","concat","TokenB","TokenB_balance_0","TokenB_balance_1","TokenB_symbol","TokenB_balance","address0","address1","undefined","getPair","pairAddress","pair","getReserves","reserves_BN","reserves0","Number","toFixed","reserves1","Component","Swap","props","handleSubmit","event","preventDefault","target","name","getTokenAData","_TokenA_address","getTokenBData","_TokenB_address","tokens","getSwap","amountIn","toString","then","values","amount_out","console","log","SwapTokenforToken","SwapTokenforEth","amountInE","amount_outE","SwapEthforToken","reserves_A_B","price_out","reserves_A_AUT","reserves_B_AUT","price_out_AUT","handleInputChange","Token","value","loadBlockchainData","Token1","Token2","_amountIn","_amount_out","parseEther","amountOut","approve","time","Math","floor","Date","now","deadline","BigNumber","from","swapExactTokensForTokens","swapExactTokensForETH","_amount_in","amount_in","getAmountsOut","amount_out0","amount_out1","amount_out2","amount_out_A","K","Token_Address","swapExactETHForTokens","className","class","onSubmit","type","placeholder","onChange","id","Liquidity","addLiquidityTest","addLiquidity","Liquidity_transfer","amountInETH","amountAMin","amountBMin","amountETHMin","reserves_A","reserves_B","amountInA","amountInB","callStatic","transfer","liquidity0","liquidity1","liquidity2","MenuItems","title","url","cName","NavBar","clicked","src","logo","map","item","index","to","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.18b021da.chunk.js","sourcesContent":["import { ethers, Contract } from \"ethers\";\nimport { Component } from \"react\";\nconst ROUTER = require(\"./build/UniswapV2Router02.json\");\nconst ERC20 = require(\"./build/ERC20.json\");\nconst FACTORY = require(\"./build/IUniswapV2Factory.json\");\nconst PAIR = require(\"./build/IUniswapV2Pair.json\");\n\nexport class _App extends Component {\n  async loadBlockchainData() {\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    let balance_0 = await provider.getBalance(accounts[0]);\n    let balance_1 = ethers.utils.formatEther(balance_0);\n\n    this.setState({ account: accounts[0] });\n    this.setState({ provider: provider });\n    this.setState({ signer: signer });\n    this.setState({ balance: balance_1 });\n\n    const Router = new Contract(\n      this.state.Router_address,\n      ROUTER.abi,\n      this.state.signer\n    );\n\n    const Weth = new Contract(\n      this.state.Weth_address,\n      ERC20.abi,\n      this.state.signer\n    );\n\n    const Factory = new Contract(\n      this.state.Factory_address,\n      FACTORY.abi,\n      this.state.provider\n    );\n\n    this.setState({ Router: Router });\n    this.setState({ Weth: Weth });\n    this.setState({ Factory: Factory });\n  }\n\n  async getTokenAData(address) {\n    try {\n      const TokenA = new Contract(address, ERC20.abi, this.state.signer);\n\n      const TokenA_balance_0 = await TokenA.balanceOf(this.state.account);\n      const TokenA_balance_1 = ethers.utils.formatEther(TokenA_balance_0);\n      const TokenA_symbol = await TokenA.symbol();\n\n      this.setState({ TokenA_balance: TokenA_balance_1 });\n      this.setState({ TokenA: TokenA });\n      document.getElementById(\"TokenA_message\").innerHTML =\n        TokenA_symbol.concat(\" balance: \");\n    } catch (err) {\n      document.getElementById(\"TokenA_message\").innerHTML =\n        \"Error: Please enter a valid token address\";\n    }\n  }\n\n  async getTokenBData(address) {\n    try {\n      const TokenB = new Contract(address, ERC20.abi, this.state.signer);\n\n      const TokenB_balance_0 = await TokenB.balanceOf(this.state.account);\n      const TokenB_balance_1 = ethers.utils.formatEther(TokenB_balance_0);\n      const TokenB_symbol = await TokenB.symbol();\n\n      this.setState({ TokenB_balance: TokenB_balance_1 });\n      this.setState({ TokenB: TokenB });\n      document.getElementById(\"TokenB_message\").innerHTML =\n        TokenB_symbol.concat(\" balance: \");\n    } catch (err) {\n      document.getElementById(\"TokenB_message\").innerHTML =\n        \"Error: Please enter a valid token address\";\n    }\n  }\n\n  async getPair(address0, address1) {\n    if (this.state.TokenA !== undefined && this.state.TokenB !== undefined) {\n      const Factory = this.state.Factory;\n      const pairAddress = await Factory.getPair(address0, address1);\n\n      const pair = new Contract(pairAddress, PAIR.abi, this.state.signer);\n      const reserves_BN = await pair.getReserves();\n\n      const reserves0 = Number(\n        ethers.utils.formatEther(reserves_BN[0])\n      ).toFixed(2);\n      const reserves1 = Number(\n        ethers.utils.formatEther(reserves_BN[1])\n      ).toFixed(2);\n\n      return [reserves0, reserves1];\n    }\n  }\n}\n\nexport default _App;\n","import React from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport _App from \"./ethereum\";\n\nclass Swap extends _App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      provider: undefined,\n      signer: undefined,\n      balance: undefined,\n      _TokenA_address: undefined,\n      _TokenB_address: undefined,\n      TokenA: undefined,\n      TokenB: undefined,\n      TokenA_balance: undefined,\n      TokenB_balance: undefined,\n      Token: \"\",\n\n      Router_address: \"0x4489D87C8440B19f11d63FA2246f943F492F3F5F\",\n      Router: undefined,\n      Factory_address: \"0x4EDFE8706Cefab9DCd52630adFFd00E9b93FF116\",\n      Factory: undefined,\n      reserves_A_B: [0, 0],\n      reserves_A_AUT: [0, 0],\n      reserves_B_AUT: [0, 0],\n      price_out: [0, 0, 0],\n      price_out_AUT: [0, 0, 0],\n\n      Weth_address: \"0x3f0D1FAA13cbE43D662a37690f0e8027f9D89eBF\",\n      Weth: undefined,\n      amountIn: 0,\n      amount_out: [undefined, undefined, undefined],\n      amountInE: 0,\n      amount_outE: [undefined, undefined, undefined],\n    };\n  }\n\n  componentWillMount() {\n    this.loadBlockchainData();\n    let A = 100.01;\n    console.log(A.toFixed(1));\n  }\n\n  async SwapTokenforToken(Token1, Token2, _amountIn, _amount_out) {\n    const amountIn = ethers.utils.parseEther(_amountIn.toString());\n    const amountOut = ethers.utils.parseEther(_amount_out.toString());\n    await Token1.approve(this.state.Router_address, amountIn);\n\n    const tokens = [Token1.address, Token2.address];\n    const time = Math.floor(Date.now() / 1000) + 200000;\n    const deadline = ethers.BigNumber.from(time);\n\n    await this.state.Router.swapExactTokensForTokens(\n      amountIn,\n      amountOut,\n      tokens,\n      this.state.account,\n      deadline\n    );\n  }\n\n  async SwapTokenforEth() {\n    const amountIn = ethers.utils.parseEther(this.state.amountIn.toString());\n    const amountOut = ethers.utils.parseEther(\n      this.state.amount_out[2].toString()\n    );\n    await this.state.TokenA.approve(this.state.Router_address, amountIn);\n\n    const tokens = [this.state._TokenA_address, this.state.Weth_address];\n    const time = Math.floor(Date.now() / 1000) + 200000;\n    const deadline = ethers.BigNumber.from(time);\n\n    await this.state.Router.swapExactTokensForETH(\n      amountIn,\n      amountOut,\n      tokens,\n      this.state.account,\n      deadline\n    );\n  }\n\n  async getSwap(_amount_in, tokens) {\n    if (this.state.TokenA !== undefined && this.state.TokenB !== undefined) {\n      const amount_in = ethers.utils.parseEther(_amount_in);\n      const amount_out = await this.state.Router.getAmountsOut(\n        amount_in,\n        tokens\n      );\n      const amount_out0 = ethers.utils.formatEther(amount_out[0]);\n      const amount_out1 = ethers.utils.formatEther(amount_out[1]);\n      const amount_out2 = ethers.utils.formatEther(amount_out[2]);\n      const amount_out_A = [amount_out0, amount_out1, amount_out2];\n      return amount_out_A;\n    }\n  }\n\n  async SwapEthforToken(K, Token_Address) {\n    const amountIn = ethers.utils.parseEther(this.state.amountInE.toString());\n    const amountOut = ethers.utils.parseEther(\n      this.state.amount_outE[K].toString()\n    );\n    await this.state.Weth.approve(this.state.Router_address, amountIn);\n\n    const tokens = [this.state.Weth_address, Token_Address];\n    const time = Math.floor(Date.now() / 1000) + 200000;\n    const deadline = ethers.BigNumber.from(time);\n\n    await this.state.Router.swapExactETHForTokens(\n      amountOut,\n      tokens,\n      this.state.account,\n      deadline,\n      { value: amountIn }\n    );\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (event.target.name === \"SubmitA\") {\n      this.getTokenAData(this.state._TokenA_address);\n    }\n    if (event.target.name === \"SubmitB\") {\n      this.getTokenBData(this.state._TokenB_address);\n    }\n    if (event.target.name === \"SubmitSwap\") {\n      let tokens = [\n        this.state._TokenA_address,\n        this.state._TokenB_address,\n        this.state.Weth_address,\n      ];\n\n      this.getSwap(this.state.amountIn.toString(), tokens).then((values) => {\n        this.setState({ amount_out: values });\n      });\n    }\n    if (event.target.name === \"swapAB\") {\n      console.log(\"Swap B!\");\n      this.SwapTokenforToken(\n        this.state.TokenA,\n        this.state.TokenB,\n        this.state.amountIn,\n        this.state.amount_out[1]\n      );\n    }\n    if (event.target.name === \"swapAE\") {\n      console.log(\"Swap E!\");\n      this.SwapTokenforEth();\n    }\n    if (event.target.name === \"SubmitSwapE\") {\n      let tokens = [\n        this.state.Weth_address,\n        this.state._TokenA_address,\n        this.state._TokenB_address,\n      ];\n\n      this.getSwap(this.state.amountInE.toString(), tokens).then((values) => {\n        this.setState({ amount_outE: values });\n      });\n      console.log(\"Get swap E\");\n    }\n    if (event.target.name === \"swapEA\") {\n      console.log(\"Swap A!\");\n      this.SwapEthforToken(1, this.state._TokenA_address);\n    }\n    if (event.target.name === \"swapEB\") {\n      console.log(\"Swap B!\");\n      this.SwapEthforToken(2, this.state._TokenA_address);\n    }\n    if (event.target.name === \"GetReserves\") {\n      if (this.state.TokenA !== undefined && this.state.TokenB !== undefined) {\n        this.getPair(\n          this.state._TokenA_address,\n          this.state._TokenB_address\n        ).then((values) => {\n          this.setState({\n            reserves_A_B: values,\n          });\n        });\n\n        let tokens = [\n          this.state._TokenA_address,\n          this.state._TokenB_address,\n          this.state.Weth_address,\n        ];\n\n        this.getSwap(\"1\", tokens).then((values) => {\n          values[0] = Number(values[0]).toFixed(6);\n          values[1] = Number(values[1]).toFixed(6);\n          values[2] = Number(values[2]).toFixed(6);\n          this.setState({ price_out: values });\n        });\n      }\n    }\n\n    if (event.target.name === \"GetReserves_AUT\") {\n      if (this.state.TokenA !== undefined && this.state.TokenB !== undefined) {\n        this.getPair(this.state._TokenA_address, this.state.Weth_address).then(\n          (values) => {\n            this.setState({\n              reserves_A_AUT: values,\n            });\n          }\n        );\n\n        this.getPair(this.state._TokenB_address, this.state.Weth_address).then(\n          (values) => {\n            this.setState({\n              reserves_B_AUT: values,\n            });\n          }\n        );\n\n        const tokens = [\n          this.state.Weth_address,\n          this.state._TokenA_address,\n          this.state._TokenB_address,\n        ];\n\n        this.getSwap(\"1\", tokens).then((values) => {\n          values[0] = Number(values[0]).toFixed(6);\n          values[1] = Number(values[1]).toFixed(6);\n          values[2] = Number(values[2]).toFixed(6);\n          this.setState({ price_out_AUT: values });\n        });\n      }\n    }\n  };\n\n  handleInputChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      Token: event.target.name,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Swap tokens / AUT</h4>\n            <p> Your account: {this.state.account} </p>\n            <p> Your balance: {this.state.balance}</p>\n          </div>\n        </div>\n\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Token A</h4>\n\n            <form class=\"myform\" name=\"SubmitA\" onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                name=\"_TokenA_address\"\n                placeholder=\"enter token address\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            <p class=\"Token_message\" id=\"TokenA_message\"></p>\n            <p class=\"Token_message\"> {this.state.TokenA_balance}</p>\n          </div>\n        </div>\n\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Token B</h4>\n\n            <form\n              className=\"myform\"\n              name=\"SubmitB\"\n              onSubmit={this.handleSubmit}\n            >\n              <input\n                type=\"text\"\n                name=\"_TokenB_address\"\n                placeholder=\"enter token address\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            <p className=\"Token_message\" id=\"TokenB_message\"></p>\n            <p className=\"Token_message\"> {this.state.TokenB_balance}</p>\n          </div>\n        </div>\n\n        {/* Swap Token A */}\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Swap Token A</h4>\n\n            {/* Get Reserves & price */}\n            <form\n              className=\"column\"\n              name=\"GetReserves\"\n              onSubmit={this.handleSubmit}\n            >\n              <p> Token A reserves: {this.state.reserves_A_B[0]}</p>\n              <p> Token B reserves: {this.state.reserves_A_B[1]}</p>\n              <input type=\"submit\" value=\"Get Reserves\" />\n            </form>\n\n            <div className=\"column\">\n              <p> Token A / B price: {this.state.price_out[1]}</p>\n              <p> Token A/AUT price: {this.state.price_out[2]}</p>\n            </div>\n\n            <form\n              className=\"myform\"\n              name=\"SubmitSwap\"\n              onSubmit={this.handleSubmit}\n            >\n              <input\n                type=\"text\"\n                name=\"amountIn\"\n                placeholder=\"enter input amount\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            {/* Swap for B */}\n            <form className=\"swap\" name=\"swapAB\" onSubmit={this.handleSubmit}>\n              <label>Token B out: {this.state.amount_out[1]}</label>\n              <input className=\"swap_button\" type=\"submit\" value=\"Swap\" />\n            </form>\n\n            {/* Swap for AUT */}\n            <form className=\"swap\" name=\"swapAE\" onSubmit={this.handleSubmit}>\n              <label>AUT out: {this.state.amount_out[2]}</label>\n              <input className=\"swap_button\" type=\"submit\" value=\"Swap\" />\n            </form>\n          </div>\n        </div>\n\n        {/* Swap AUT */}\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Swap AUT</h4>\n\n            {/* Get Reserves & price */}\n            <form\n              className=\"column_aut\"\n              name=\"GetReserves_AUT\"\n              onSubmit={this.handleSubmit}\n            >\n              <p> Token A reserves: {this.state.reserves_A_AUT[0]}</p>\n              <p> AUT reserves: {this.state.reserves_A_AUT[1]}</p>\n              <input type=\"submit\" value=\"Get Reserves AUT\" />\n            </form>\n\n            <div className=\"column_aut\">\n              <p> Token B reserves: {this.state.reserves_B_AUT[0]}</p>\n              <p> AUT reserves: {this.state.reserves_B_AUT[1]}</p>\n            </div>\n\n            <div className=\"column_aut\">\n              <p> Token AUT/A price: {this.state.price_out_AUT[1]}</p>\n              <p> Token AUT/B price: {this.state.price_out_AUT[2]}</p>\n            </div>\n\n            <form\n              className=\"myform\"\n              name=\"SubmitSwapE\"\n              onSubmit={this.handleSubmit}\n            >\n              <input\n                type=\"text\"\n                name=\"amountInE\"\n                placeholder=\"enter input amount\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            {/* Swap for A */}\n            <form className=\"swap\" name=\"swapEA\" onSubmit={this.handleSubmit}>\n              <label>Token A out: {this.state.amount_outE[1]}</label>\n              <input className=\"swap_button\" type=\"submit\" value=\"Swap\" />\n            </form>\n\n            {/* Swap for B */}\n            <form className=\"swap\" name=\"swapEB\" onSubmit={this.handleSubmit}>\n              <label>Token B out: {this.state.amount_outE[2]}</label>\n              <input className=\"swap_button\" type=\"submit\" value=\"Swap\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Swap;\n","import React from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport _App from \"./ethereum\";\n\nclass Liquidity extends _App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      provider: undefined,\n      signer: undefined,\n      balance: undefined,\n      _TokenA_address: undefined,\n      _TokenB_address: undefined,\n      TokenA: undefined,\n      TokenB: undefined,\n      TokenA_balance: undefined,\n      TokenB_balance: undefined,\n      reserves_A_B: [undefined, undefined],\n      Liquidity_transfer: [0, 0, 0],\n      amountInETH: 0,\n      amountAMin: 0,\n      amountBMin: 0,\n      amountETHMin: 0,\n      Token: \"\",\n\n      Router_address: \"0x4489D87C8440B19f11d63FA2246f943F492F3F5F\",\n      Router: undefined,\n      Factory_address: \"0x4EDFE8706Cefab9DCd52630adFFd00E9b93FF116\",\n      Factory: undefined,\n      reserves_A: 0,\n      reserves_B: 0,\n      Weth_address: \"0x3f0D1FAA13cbE43D662a37690f0e8027f9D89eBF\",\n      Weth: undefined,\n    };\n  }\n\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async addLiquidity() {\n    const amountInA = ethers.utils.parseEther(this.state.amountInA.toString());\n    const amountInB = ethers.utils.parseEther(this.state.amountInB.toString());\n\n    const amountAMin = ethers.utils.parseEther(\n      this.state.amountAMin.toString()\n    );\n    const amountBMin = ethers.utils.parseEther(\n      this.state.amountBMin.toString()\n    );\n\n    const time = Math.floor(Date.now() / 1000) + 200000;\n    const deadline = ethers.BigNumber.from(time);\n\n    await this.state.TokenA.approve(this.state.Router_address, amountInA);\n    await this.state.TokenB.approve(this.state.Router_address, amountInB);\n\n    await this.state.Router.addLiquidity(\n      this.state._TokenA_address,\n      this.state._TokenB_address,\n      amountInA,\n      amountInB,\n      amountAMin,\n      amountBMin,\n      this.state.account,\n      deadline\n    );\n  }\n\n  async addLiquidityTest() {\n    const amountInA = ethers.utils.parseEther(this.state.amountInA.toString());\n    const amountInB = ethers.utils.parseEther(this.state.amountInB.toString());\n\n    const amountAMin = ethers.utils.parseEther(\n      this.state.amountAMin.toString()\n    );\n    const amountBMin = ethers.utils.parseEther(\n      this.state.amountBMin.toString()\n    );\n\n    const time = Math.floor(Date.now() / 1000) + 200000;\n    const deadline = ethers.BigNumber.from(time);\n\n    const transfer = await this.state.Router.callStatic.addLiquidity(\n      this.state._TokenA_address,\n      this.state._TokenB_address,\n      amountInA,\n      amountInB,\n      amountAMin,\n      amountBMin,\n      this.state.account,\n      deadline\n    );\n\n    console.log(transfer);\n\n    const liquidity0 = ethers.utils.formatEther(transfer[0]);\n    const liquidity1 = ethers.utils.formatEther(transfer[1]);\n    const liquidity2 = ethers.utils.formatEther(transfer[2]);\n\n    console.log(\"tokenA in: \", ethers.utils.formatEther(transfer[0]));\n    console.log(\"tokenB in: \", ethers.utils.formatEther(transfer[1]));\n    console.log(\n      \"liquidity tokens out: \",\n      ethers.utils.formatEther(transfer[2])\n    );\n\n    this.setState({ Liquidity_transfer: [liquidity0, liquidity1, liquidity2] });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (event.target.name === \"SubmitA\") {\n      this.getTokenAData(this.state._TokenA_address);\n    }\n    if (event.target.name === \"SubmitB\") {\n      this.getTokenBData(this.state._TokenB_address);\n    }\n    if (event.target.name === \"Deploy Liquidity Test\") {\n      this.addLiquidityTest();\n    }\n    if (event.target.name === \"Deploy Liquidity\") {\n      this.addLiquidity();\n    }\n    if (event.target.name === \"GetReserves\") {\n      if (this.state.TokenA !== undefined && this.state.TokenB !== undefined) {\n        this.getPair(\n          this.state._TokenA_address,\n          this.state._TokenB_address\n        ).then((values) => {\n          this.setState({\n            reserves_A_B: values,\n          });\n        });\n      }\n    }\n  };\n\n  handleInputChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      Token: event.target.name,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Deploy liquidity</h4>\n            <p> Your account: {this.state.account} </p>\n            <p> Your balance: {this.state.balance}</p>\n          </div>\n        </div>\n\n        {/* Token A */}\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Token A</h4>\n\n            <form class=\"myform\" name=\"SubmitA\" onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                name=\"_TokenA_address\"\n                placeholder=\"enter token address\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            <p class=\"Token_message\" id=\"TokenA_message\"></p>\n            <p class=\"Token_message\"> {this.state.TokenA_balance}</p>\n          </div>\n        </div>\n\n        {/* Token B */}\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Token B</h4>\n\n            <form\n              className=\"myform\"\n              name=\"SubmitB\"\n              onSubmit={this.handleSubmit}\n            >\n              <input\n                type=\"text\"\n                name=\"_TokenB_address\"\n                placeholder=\"enter token address\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            <p className=\"Token_message\" id=\"TokenB_message\"></p>\n            <p className=\"Token_message\"> {this.state.TokenB_balance}</p>\n          </div>\n        </div>\n\n        {/* Deploy liquidity */}\n        <div className=\"outer\">\n          <div className=\"container\">\n            <h4> Deploy A/B liquidity </h4>\n\n            <form\n              className=\"myform\"\n              name=\"GetReserves\"\n              onSubmit={this.handleSubmit}\n            >\n              <p> Token A reserves: {this.state.reserves_A_B[0]}</p>\n              <p> Token B reserves: {this.state.reserves_A_B[1]}</p>\n              <input type=\"submit\" value=\"Get Reserves\" />\n            </form>\n\n            <form\n              className=\"myform\"\n              name=\"Deploy Liquidity Test\"\n              onSubmit={this.handleSubmit}\n            >\n              <input\n                type=\"text\"\n                name=\"amountInA\"\n                placeholder=\"Amount in Token A\"\n                onChange={this.handleInputChange}\n              />\n\n              <input\n                type=\"text\"\n                name=\"amountInB\"\n                placeholder=\"Amount in Token B\"\n                onChange={this.handleInputChange}\n              />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            <form\n              className=\"myform\"\n              name=\"Deploy Liquidity\"\n              onSubmit={this.handleSubmit}\n            >\n              <p> TokenA in: {this.state.Liquidity_transfer[0]}</p>\n              <p> TokenB in: {this.state.Liquidity_transfer[1]}</p>\n              <p> Liquidity tokens out: {this.state.Liquidity_transfer[1]}</p>\n              <input type=\"submit\" value=\"Deploy Liquidity\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Liquidity;\n","export const MenuItems = [\n  {\n    title: \"Swap\",\n    url: \"/uniswap-react/\",\n    cName: \"nav-links\",\n  },\n  {\n    title: \"Deploy Liquidity\",\n    url: \"/uniswap-react/liquidity\",\n    cName: \"nav-links\",\n  },\n];\n","export default __webpack_public_path__ + \"static/media/logo.28418735.svg\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MenuItems } from \"./MenuItems\";\nimport logo from \"../assets/img/logo.svg\";\nimport \"./NavBar.css\";\n\nclass NavBar extends Component {\n  state = { clicked: false };\n\n  render() {\n    return (\n      <nav>\n        <div className=\"Title\">\n          <h1 className=\"navbar-logo\">\n            <img src={logo} className=\"logo\"></img> Autonity Uniswap\n          </h1>\n        </div>\n\n        <div className=\"NavbarItems\">\n          <ul className={`nav-menu`}>\n            {MenuItems.map((item, index) => {\n              return (\n                <li key={index}>\n                  <Link className={\"nav-links\"} to={item.url}>\n                    {item.title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport _App from \"./ethereum\";\nimport Swap from \"./Swap\";\nimport Liquidity from \"./Liquidity\";\nimport NarBar from \"./NavBar/NavBar\";\nimport { Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NarBar />\n      <Route exact path=\"/uniswap-react/\" component={Swap} />\n      <Route exact path=\"/uniswap-react/liquidity\" component={Liquidity} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}